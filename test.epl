let first = fn(a: Int, b: Int) -> Int {
    a
}

let second = fn(a: Int, b: Int) -> Int {
    first(b, a)
}

let Some = Int

let pass = fn(v: Some) -> Some {
    v
}

let ignore = fn(v: Some) {}

var gvar = 4

let show = fn(i: Int) {
    iprint(i)
}

let main = fn() {
    var i = 5
    var j = 0
    while gt(i, 0) {
          j = add(j, 1)
          i = sub(i, 1)
    }
    var k = add(j, 0)   
    iprint(k)
    iprint(0)

    i = 5
    while gt(i, 0) {
          bprint(gt(i, 0))
          iprint(i)
          i = sub(i, 1)
    }
    bprint(gt(i, 0))
    i
}
