fn assert(c: Bool) { if not(c) { abort() } }

enum Test { value }
enum Void {}
let immutable: Test = value
var mutable: Test
let notype = value
let incompatible: Void = value //<error type mismatch

fn imm() {
   let i = 3
   i = 4 //<error variable is immutable
}

fn noinit() {
   var u: Int
   var v: Int = 2
   v = u //<runtime variable not initialized
   u = v
}

fn main() {
   var m = 1
   assert(ieq(m, 1))
   m = 2
   assert(ieq(m, 2))
   let im = 3
   assert(ieq(im, 3))
   noinit()
}