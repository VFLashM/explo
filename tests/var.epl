fn assert(c: Bool) { if not(c) { abort() } }

let noval: Int //<ModelError not initialized
let full: Int = 5
let notype = 6
let unit = {}

var vnoval: Int
var vfull: Int = full
var vnotype = notype
var vunit = {}

var noval: Int //<ModelError already defined

fn main() {
   print(vnoval) //<InterpreterError not initialized
   assert(ieq(full, 5))
   assert(ieq(notype, 6))
   assert(ieq(vfull, 5))
   assert(ieq(vnotype, 6))

   vfull = 7
   assert(ieq(vfull, 7))
   
   full = 7 //<ModelError immutable
   assert(ieq(full, 5))

   vunit = unit
   vunit = {}
   unit = vunit //<ModelError immutable
}
